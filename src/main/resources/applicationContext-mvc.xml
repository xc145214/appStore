<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util-4.1.xsd">
    <mvc:annotation-driven/>

    <!-- ################################全局转换############################## -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!--<property name="converters">
            <set>
                <bean class="com.angelina.action.SampleAction$StringToFormAttributeConverter"/>
            </set>
        </property>
        <property name="formatters">
            <set>
                <bean class="com.angelina.action.SampleAction$BigDecimalFormatter">
                    <property name="decimalOr" value="true"/>
                </bean>
            </set>
        </property>-->
    </bean>

    <!--
        基于<mvc/>命名空间的配置，
        HandlerMapping实例按照处理顺序：
            A：SimpleUrlHandlerMapping(order = LOWEST_PRECEDENCE - 1)
            B：RequestMappingHandlerMapping(order = 0)
            C：BeanNameUrlHandlerMapping AS BEAN_NAME_URL_HANDLER_MAPPING_BEAN_NAME(order = 2)
        HandlerExceptionResolver实例按照处理顺序：
            ExceptionHandlerExceptionResolver(order = 0)
            ResponseStatusExceptionResolver(order = 1)
            DefaultHandlerExceptionResolver(order = 2)
    -->
    <mvc:annotation-driven
            conversion-service="conversionService"
            validator="validator"
            content-negotiation-manager="contentNegotiationManager">
        <!--
            缺省的消息转换句柄：
                ByteArrayHttpMessageConverter(application/octet-stream，byte[])
                StringHttpMessageConverter(writeAcceptCharset=false，text/plain|MediaType.ALL，ISO-8859-1，String)
                ResourceHttpMessageConverter(MediaType.ALL，org.springframework.core.io.Resource)
                SourceHttpMessageConverter(application/xml|text/xml|application/*+xml，javax.xml.transform.dom.DOMSource|javax.xml.transform.sax.SAXSource|javax.xml.transform.stream.StreamSource|javax.xml.transform.Source)
                AllEncompassingFormHttpMessageConverter(包含SourceHttpMessageConverter/Jaxb2RootElementHttpMessageConverter/MappingJackson2HttpMessageConverter/MappingJacksonHttpMessageConverter)(application/json|application/*+json|application/xml|text/xml|application/*+xml)
                Jaxb2RootElementHttpMessageConverter(application/xml|text/xml|application/*+xml，canRead和canWrite方法判断)
                MappingJackson2HttpMessageConverter(application/json|application/*+json，canRead和canWrite方法判断)
                MappingJacksonHttpMessageConverter(application/json|application/*+json，canRead和canWrite方法判断)
        -->
        <!--<mvc:message-converters register-defaults="true">
            <bean class="com.hongling.action.support.NopHttpMessageConverter"/>
        </mvc:message-converters>-->
    </mvc:annotation-driven>

    <!--
        拦截器。
    -->
    <mvc:interceptors>
        <!--
            所有请求。
        -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="language"/>
        </bean>
        <bean class="org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor">
            <constructor-arg ref="conversionService"/>
        </bean>
    </mvc:interceptors>

    <!--
    拦截器。
     -->
    <mvc:interceptors>
        <!--
            所有请求。
        -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="language"/>
        </bean>
        <bean class="org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor">
            <constructor-arg ref="conversionService"/>
        </bean>
    </mvc:interceptors>


    <!--
        A：静态资源路径映射(依赖SimpleUrlHandlerMapping和BeanNameUrlHandlerMapping)，默认顺序：
        LOWEST_PRECEDENCE -1。
        注意：mapping中的*号不能省略。
    -->
    <mvc:resources mapping="/static/**" location="/resources/" cache-period="31556926"/>

    <!--
        C：路径直接映射到视图(以视图名称定义)(依赖SimpleUrlHandlerMapping)。
    -->
    <mvc:view-controller path="/" view-name="index"/>

    <!--
        当容器中将DispatcherService映射到/时，这个配置将覆盖容器映射到/路径设置，而替代为/**。
        (这里不需要。)
    -->
    <mvc:default-servlet-handler/>

    <!--
        Content-Type/Accept(请求应答)消息协商管理器。
        策略：
            通过文件后缀：/users/fred.pdf请求一个pdf资源。
            通过HTTP头中Accept：/users/fred请求一个pdf资源。
    -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true"/>
        <property name="favorParameter" value="false"/>
        <property name="ignoreAcceptHeader" value="false"/>
        <property name="defaultContentType" value="text/html"/>
        <property name="mediaTypes">
            <props>
                <prop key="pdf">application/pdf</prop>
                <prop key="xsl">application/vnd.ms-excel</prop>
                <prop key="xml">application/xml</prop>
                <prop key="json">application/json</prop>
            </props>
        </property>
    </bean>

    <!--
        当ModelAndView实例不为空，但是其中引用的View实例(View子类或者viewName)为空的时候，触发此Bean
        解释viewName，后面的处理委托给ViewResolver(链)进行处理。
    -->
    <bean id="viewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator"/>

    <!--
        Content-Type/Accept(请求应答)内容协商ViewResolver。
    -->


    <!--
        默认ViewResolver(最低优先级)，即当返回的viewName找不到对应View实例处理时，使用JSP的方式进行处理。
        可以集成在contentNegotiatingViewResolver中。
    -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order">
            <util:constant static-field="java.lang.Integer.MAX_VALUE"/>
        </property>
        <property name="suffix" value=".jsp"/>
        <property name="prefix" value="/WEB-INF/views/"/>
    </bean>

    <!-- ############################## Tiles Configuration ##############################-->
    <!--<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">-->
    <!--<property name="definitions">-->
    <!--<list>-->
    <!--<value>classpath*:tiles-definition.xml</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--<property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory"/>-->
    <!--</bean>-->

    <!-- ############################## Velocity Configuration ##############################-->
    <!--<bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">-->
    <!--<property name="configLocation" value="classpath:velocity.properties"/>-->
    <!--<property name="resourceLoaderPath" value="/sample-jsp"/>-->
    <!--<property name="velocityProperties">-->
    <!--<props>-->
    <!--<prop key="input.encoding">UTF-8</prop>-->
    <!--<prop key="output.encoding">UTF-8</prop>-->
    <!--<prop key="default.contentType">UTF-8</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->

    <!-- ############################## Freemarker Configuration ##############################-->
    <!--<bean id="freemarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
    <!--<property name="templateLoaderPath" value="classpath:/notifications"/>-->
    <!--<property name="templateLoaderPaths">-->
    <!--<list>-->
    <!--<value>/sample-jsp</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--<property name="freemarkerSettings">-->
    <!--<props>-->
    <!--<prop key="template_update_delay">3600</prop>-->
    <!--<prop key="defaultEncoding">UTF-8</prop>-->
    <!--<prop key="url_escaping_charset">UTF-8</prop>-->
    <!--<prop key="boolean_format">true,false</prop>-->
    <!--<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>-->
    <!--<prop key="date_format">yyyy-MM-dd</prop>-->
    <!--<prop key="time_format">HH:mm:ss</prop>-->
    <!--<prop key="number_format">###,###,###.##</prop>-->
    <!--<prop key="whitespace_stripping">true</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--<property name="freemarkerVariables">-->
    <!--<map>-->
    <!--<entry key="xml_escape">-->
    <!--<bean class="freemarker.template.utility.XmlEscape"/>-->
    <!--</entry>-->
    <!--</map>-->
    <!--</property>-->
    <!--<property name="defaultEncoding" value="UTF-8"/>-->
    <!--</bean>-->

    <!-- ############################## File Upload Configuration ##############################-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="defaultEncoding" value="UTF-8"/>
    <property name="maxUploadSize" value="2097152"/>
    <!--<property name="uploadTempDir" value="${use.home}/tmp"/>-->
    </bean>

    <!-- ############################## Validation(JSR-303) Configuration ##############################-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!-- ############################## Locale Configuration ##############################-->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <!--
            true：如果找不到key对应的消息，使用code作为默认消息；如果集成在Validation框架中，设置为
            true可能会引发问题。
        -->
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="fallbackToSystemLocale" value="false"/>
        <property name="basenames">
            <list>
                <value>com.hongling.admin.i18n.error</value>
            </list>
        </property>
    </bean>
</beans>
